1.Creating EFArchitecture.Core, EFArchitecture.Data, EFArchitecture.Models, EFArchitecture(the client)


2.In EFArchitecture.Core
  -Folder Contracs: here are the interfaces
   *For example create class IEmployeeService 
    -Task<EmployeeDto> GetEmployeeWithHighestSalary();

  -Folder Services: here are the services
   *For example create class EmployeeService : IEmployeeService
    -public async Task<EmployeeDto> GetEmployeeWithHighestSalary()
        { throw new NotImplementedException(); }

  -Folder DTOs: here are the models(DTOs) with the needed data
   *For example create class EmployeeDto


3.In EFArchitecture.Data
  -Folder Common:
    *DbConfig class with the connection string(@"Server=VLADOTONCHEV\SQLEXPRESS;Database=PetStoreWebApp;Integrated Security=True;")
    *Constants
  -EFArchitectureDbContext


4.In EFArchitecture.Models
  -The models(tables) of the DB


5.In EFArchitecture
  -var serviceProvider = new ServiceCollection()
                .AddDbContext<EFArchitectureDbContext>(options =>
                    options.UseSqlServer(@"Server=VLADOTONCHEV\SQLEXPRESS;Database=PetStoreWebApp;Integrated Security=True;"))
                //.AddScoped<IEFArchitectureRepository, EFArchitectureRepository>()
		//.AddScoped<IEmployeeService, EmployeeService>()
                .BuildServiceProvider();-serviceCollection where we add the dbContext and the repository
   var employeeService = serviceProvider.GetService<EmployeeService>();
   var employee = await employeeService.GetEmployeeWithHighestSalary();
   Console.WriteLine($"{employee.FirstName} {employee.LastName}: {employee.Salary:F2}");


6.Project references:
  -EFArchitecture: Core
  -Core: Data, Models
  -Models: Data

7.NuGet packages:
  -In Models: 
   *EntityFrameworkCore
   *EntityFrameworkCore.SqlServer
  -In Data: 
   *EntityFrameworkCore
   *Microsoft.EntityFramework.SqlServer
   *Microsoft.EntityFramework.Proxies(for lazy loading)
   *Microsoft.EntityFramework.Tools(for migrations)